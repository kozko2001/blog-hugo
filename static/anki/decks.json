{"decks": [{"name": "Roam2Anki", "cards": [{"type": "cloze", "id": "770e5a7b-753c-4197-8e78-0b95c66f4304 ", "text": "How does GraalVM achieve more performance than the JVM {{c1:: removing the linker phase in runtime (JAVA_PATH) and jumping the step of bytecode. This wayit can apply good optimization }} at the expense of {{c2: Loosing some reflection capabilities and the compile once and run everywhere}} {{id: 770e5a7b-753c-4197-8e78-0b95c66f4304 }} [[FlashCard]]"}, {"type": "cloze", "id": "2a50c915-ab11-4584-96aa-fcd9955b3107 ", "text": " What is Truffle {{c1:: is an abstract syntax tree interpreter that allow to build frontend for GraalVM  }} {{id: 2a50c915-ab11-4584-96aa-fcd9955b3107 }} [[FlashCard]]"}, {"type": "cloze", "id": "c1162ebd-c46f-4b02-a1fa-218bba326287 ", "text": "What is Keycloack? {{c1:: is a Open Source Identity and Access Management,  }} {{id: c1162ebd-c46f-4b02-a1fa-218bba326287 }} [[FlashCard]]"}, {"type": "cloze", "id": "1a6bef7c-f98c-4367-86c6-06a4d83a2f40 ", "text": " Similar services of keycloack? {{c1:: Okta and Auth0}} {{id: 1a6bef7c-f98c-4367-86c6-06a4d83a2f40 }} [[FlashCard]]"}, {"type": "cloze", "id": "00094e21-2a39-459c-ba66-4dfdaa60eee9", "text": "* One easy way to convert a text to an array of numbers is by using a technique named {{c1:: Bag of Words}} which consist of {{c2:: converting every word in the vocabulary into an index, and then a sentence is 0 or 1 depending if the word exist }} {{id: 00094e21-2a39-459c-ba66-4dfdaa60eee9}} [[FlashCard]] "}, {"type": "cloze", "id": "42c5aae1-b1e1-4321-84f8-920c9d80175f ", "text": "* With an spare representation a logistic regression model will need to learn {{c1:: n+1}} parameters where n is the size of the vocabulary {{id: 42c5aae1-b1e1-4321-84f8-920c9d80175f }} [[FlashCard]]"}, {"type": "cloze", "id": "32681a27-db31-45e7-9853-148cb304f8a1 ", "text": "* With a frequency table we can create a frequency representation of the tweet as {{c1:: [1 <- bias, sum of positive frequencies, sum of negative frequencies] }} {{id: 32681a27-db31-45e7-9853-148cb304f8a1 }} [[FlashCard]]"}, {"type": "cloze", "id": "b45287f1-2711-4bae-82f8-7afb8f9a7eff ", "text": "-  What P(A | B ) means?  {{c1:: frequency of happening A if we know that B already happened  }} {{id: b45287f1-2711-4bae-82f8-7afb8f9a7eff }} [[FlashCard]]"}, {"type": "cloze", "id": "ebcfb3d7-e93e-486b-a368-a99054df14d1 ", "text": "-   How do you express the probability of A, once we already now event B happened {{c1:: P(A | B)  }} {{id: ebcfb3d7-e93e-486b-a368-a99054df14d1 }} [[FlashCard]]"}, {"type": "cloze", "id": "531ecec2-509d-4d73-9799-a774d4f52a8a ", "text": "\t-  how can you rewrite \\(P(A | B)\\) using Bayes Rule? {{c1::  \\(P(A | B) = P(B | A) * \\frac {P(A)} {P(B)}\\) }} {{id: 531ecec2-509d-4d73-9799-a774d4f52a8a }} [[FlashCard]]"}, {"type": "cloze", "id": "abcfad02-0b85-4fa0-8b3c-ee9fd01cfa4e ", "text": "-  What does \\(P(Positive | \"happy\")\\)  mean? {{c1:: It means, probability of being of class \"positive\" given that it contains the word \"happy\"  }} {{id: abcfad02-0b85-4fa0-8b3c-ee9fd01cfa4e }} [[FlashCard]]"}, {"type": "cloze", "id": "98b50522-a207-4b98-ac16-a16d3c3ca76e ", "text": " - How you calculate the vector norm (euclidean distance) in numpy? {{c1:: `np.linalg.norm(a - b)` }} {{id: 98b50522-a207-4b98-ac16-a16d3c3ca76e }} [[FlashCard]]"}, {"type": "cloze", "id": "7a0af8e4-9f9d-4477-8f89-3e104b5f2e9b ", "text": "- What is the problem of using euclidean distance for word vector representation? {{c1::  depending on number of occurrence of the words, the distance can be different }} and what we can use to overcome this problem? {{c2:: Cosine similarity}} {{id: 7a0af8e4-9f9d-4477-8f89-3e104b5f2e9b }} [[FlashCard]]"}, {"type": "cloze", "id": "CostaRica [[July 22nd, 2020]]", "text": "- Capital of Costa rica is {{c1:: San Jose}} {{id: CostaRica [[July 22nd, 2020]]}}[[FlashCard]] "}, {"type": "cloze", "id": "Papua[[July 22nd, 2020]]", "text": "- Capital of Papua New Guinea is {{c1:: Port Moresby}} {{id: Papua[[July 22nd, 2020]]}} [[FlashCard]] "}, {"type": "cloze", "id": "31d677e6-760b-481a-ae6d-f3b5ef5ca189 ", "text": "How do you calculate the dot product of two vectors? {{c1:: \\( \\vec{v}*\\vec{w} = \\sum {v_i * w_i} \\)}} {{id: 31d677e6-760b-481a-ae6d-f3b5ef5ca189 }} [[FlashCard]]"}, {"type": "cloze", "id": "8783b050-b91d-4f7d-a1b7-48563a7b0695 ", "text": "-  Why is Naive Bayes, named naive? {{c1:: Cause it makes the assumption that features used for classification are independent }} {{id: 8783b050-b91d-4f7d-a1b7-48563a7b0695 }} [[FlashCard]]"}, {"type": "cloze", "id": "70f6e5af-a4af-448d-9849-a35707d7df74 ", "text": "\t-  Why we use Log Likelihood {{c1:: for numeric stability, preventing underflow }} {{id: 70f6e5af-a4af-448d-9849-a35707d7df74 }} [[FlashCard]]"}, {"type": "cloze", "id": "b3a764f7-9a8d-422a-bad9-4da27f66a3be ", "text": "\t-  how you can decompose \\(log(a * b)\\) {{c1:: \\(log(a) + log(b)\\)}} {{id: b3a764f7-9a8d-422a-bad9-4da27f66a3be }} [[FlashCard]]"}, {"type": "cloze", "id": "9691cc2a-14f8-4d4d-912a-a953da1fa294 ", "text": "Logistic regression cost function is  {{c1:: -1/m of Sum of  }}  {{c2:: `y(i) * log h(x(i), theta)` }}  {{c3:: `1-y(i) * log(1-h(x(i), theta))` }} {{id: 9691cc2a-14f8-4d4d-912a-a953da1fa294 }} [[FlashCard]]"}, {"type": "cloze", "id": "5ef0e3bf-f6e7-4177-a929-7605097aa597 ", "text": " Stemming is the process of  {{c1:: reducing words to they root meaning }} {{id: 5ef0e3bf-f6e7-4177-a929-7605097aa597 }} [[FlashCard]]"}, {"type": "cloze", "id": "73d40fb1-23b0-48cf-be15-f7c52b582bd7 ", "text": " We do stemming cause {{c1:: reduces the vocabulary size maintaining the meaning of the word}} {{id: 73d40fb1-23b0-48cf-be15-f7c52b582bd7 }} [[FlashCard]]"}, {"type": "cloze", "id": "ffba23bd-426f-43e7-b572-ea3dfdcb23fe ", "text": "-What is cosine similarity? {{c1::  is a metric to compare two vectors depending on the inner angle, and that way, it's not affected for the size of the vector}} {{id: ffba23bd-426f-43e7-b572-ea3dfdcb23fe }} [[FlashCard]]"}, {"type": "cloze", "id": "c19d6406-76f5-4088-8afe-6771b6d8f78d ", "text": "-   Cosine of two vectors is: {{c1::  \\(cos(Beta) = \\frac {\\vec(v) * \\vec(w)} {\\|\\vec(v)\\| * \\|\\vec{w}\\|} \\) }} {{id: c19d6406-76f5-4088-8afe-6771b6d8f78d }} [[FlashCard]]"}]}]}