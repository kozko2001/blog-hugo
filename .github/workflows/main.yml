name: DockerImage

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true  # Fetch Hugo themes (true OR recursive)
          fetch-depth: 0    # Fetch all history for .GitInfo and .Lastmod

      - name: Login to Harbor
        uses: docker/login-action@v3
        with:
          registry: harbor.allocsoc.net
          username: ${{ secrets.HARBOR_USERNAME }}
          password: ${{ secrets.HARBOR_PASSWORD }}

      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: '0.100.1'
          # extended: true

      - name: Build
        run: hugo --minify

      - name: Build, tag, and push image to Harbor
        run: |
          git_hash=$(git rev-parse --short "$GITHUB_SHA")
          docker build -t harbor.allocsoc.net/blog/blog:$git_hash .
          docker push harbor.allocsoc.net/blog/blog:$git_hash 
  update-manifests:
    needs: deploy
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Update image in deployment
        run: |
          # Update the image tag in deployment.yaml
          git_hash=$(git rev-parse --short "$GITHUB_SHA")
          NEW_IMAGE=harbor.allocsoc.net/blog/blog:$git_hash
          sed -i "s|image: .*|image: ${NEW_IMAGE}|" k8s/deployment.yaml

      - name: Commit and push changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add k8s/deployment.yaml
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Update image to ${{ github.sha }}"
            git push
          fi
  trigger-flux:
    needs: [deploy, update-manifests]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Trigger FluxCD Webhook
        run: |
          # Calculate webhook URL with HMAC signature
          PAYLOAD='{"ref":"refs/heads/main","repository":{"clone_url":"${{ github.server_url }}/${{ github.repository }}.git"}}'
          SIGNATURE=$(echo -n "$PAYLOAD" | openssl dgst -sha256 -hmac "${{ secrets.FLUX_WEBHOOK_SECRET }}" | sed 's/^.* //')
          
          curl -X POST \
            -H "Content-Type: application/json" \
            -H "X-Hub-Signature-256: sha256=$SIGNATURE" \
            -H "X-GitHub-Event: push" \
            -d "$PAYLOAD" \
            "http://flux.allocsoc.net/hook/${{ secrets.FLUX_WEBHOOK_SECRET }}"
